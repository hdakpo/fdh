% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fdh-package.R
\docType{package}
\name{fdh-package}
\alias{fdh-package}
\alias{fdh}
\title{fdh: A package for estimating nonconvex frontier models}
\description{
The \pkg{fdh} package provides simple ways, using enumeration algorithms,
for estimating different efficiency scores (output, input, graph) with the
possibilities of imposing different returns to scale assumptions (constant,
non-decreasing, non-increasing, variable returns to scale).
The package also offers the possiblity of estimating the minimum cost as well
as the maximum revenue in addition to their corresponding cost efficiency and
revenue efficiency scores. For large datasets, the \code{parallel} can be
used to speed up computations.
}
\section{costEffDecomp}{
 \code{\link{costEffDecomp}} decomposes the overall
cost efficiency into seceral components (technical efficiency, overall
technical efficiency, scale efficiency, and allocative efficieny).
}

\section{costFun}{
 \code{\link{costFun}} returns the minimum cost along with
cost efficiency under different returns to scale assumptions.
}

\section{distFun}{
 \code{\link{distFun}} estimates the Farrell efficiency
scores for the output, input and graph orientations under different returns
to scale assumptions.
}

\section{dominFun}{
 \code{\link{dominFun}} returns a list that contains for
each observation the corresponding scale dominance set.
}

\section{revEffDecomp}{
 \code{\link{revEffDecomp}} decomposes the overall
revenue efficiency into seceral components (technical efficiency, overall
technical efficiency, scale efficiency, and allocative efficieny).
}

\section{revFun}{
 \code{\link{revFun}} returns the maximum revenue along with
the corresponding revenue efficiency under different returns to scale
assumptions.
}

\section{Bugreport}{
 Any bug or suggestion can be reported using the
\code{fdh} tracker facilities at: \url{https://github.com/hdakpo/fdh/issues}
}

\author{
K Herv√© Dakpo, Frederic Ang, and Kristiaan Kerstens
}
