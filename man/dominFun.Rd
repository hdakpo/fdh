% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dominFun.R
\name{dominFun}
\alias{dominFun}
\title{Scaled vector dominance sets}
\usage{
dominFun(
  xobs,
  yobs,
  xref = NULL,
  yref = NULL,
  rts = "vrs",
  parallel = FALSE,
  cores = availableCores(omit = 1)
)
}
\arguments{
\item{xobs}{a \eqn{K \times N} matrix with \eqn{K} the number of inputs and
\eqn{N} the number of decision making units (DMUs) under evaluation.}

\item{yobs}{a \eqn{Q \times N} matrix with \eqn{Q} the number of outputs and
\eqn{N} the number of DMUs under evaluation.}

\item{xref}{(optional). a  \eqn{K \times N_r} matrix on inputs of DMUs
serving as benchmark (or use to define the technology).
Default to \code{'xobs'}.}

\item{yref}{(optional). a  \eqn{Q \times N_r} matrix on outputs of DMUs
serving as benchmark (or use to define the technology).
Default to \code{'yobs'}.}

\item{rts}{Character string specifying the returns to scale assumption.
The default value is \code{'vrs'} (variable returns to scale). Other possible
options are \code{'crs'} (constant returns to scale), \code{'nirs'}
(non-increasing returns to scale), or \code{'ndrs'} (non-decreasing returns
to scale).}

\item{parallel}{Logical. Allows parallel computation. If \code{FALSE}
(default), the estimation is conducted in sequential mode. If \code{TRUE},
parallel mode is activated using the number of cores specified in
\code{cores}. When the sample size is small, it is recommended to keep the
\code{parallel} option to its default value (\code{FALSE}).}

\item{cores}{Integer. Used only if \code{parallel = TRUE}. It specifies the
number of cores to be used for parallel computation. By default,
\code{cores = availableCores(omit = 1)}.}
}
\value{
\code{dominFun} returns a list that contains for each observation in
the original dataset the vector of dominating observations.
}
\description{
\code{dominFun} returns the set of observations that dominate the DMU under
evaluation given a specific returns to scale assumption.
}
\details{
For the different returns to scale assumptions, we have:

\itemize{
\item{variable returns to scale - \code{'vrs'}}{\deqn{\left\{
\left(\mathbf{x}_n, \mathbf{y}_n\right) | \mathbf{x} \geq
\mathbf{x}_n, \mathbf{y} \leq \mathbf{x}_n\right\}}}

\item{constant returns to scale - \code{'crs'}}{\deqn{\left\{
\left(\mathbf{x}_n, \mathbf{y}_n\right) |
\displaystyle\max_{q=1, \cdots, Q}\frac{y_q^\circ}{y_{qn}} \leq
\displaystyle\min_{k=1, \cdots, K}\frac{x_k^\circ}{x_{kn}}\right\}}}

\item{nonincreasing returns to scale - \code{'nirs'}}{\deqn{\left\{
\left(\mathbf{x}_n, \mathbf{y}_n\right) |
\displaystyle\max_{q=1, \cdots, Q}\frac{y_q^\circ}{y_{qn}} \leq 1\right\}}}

\item{nondecreasing returns to scale - \code{'ndrs'}}{\deqn{\left\{
\left(\mathbf{x}_n, \mathbf{y}_n\right) |
\displaystyle\min_{k=1, \cdots, K}\frac{x_k^\circ}{x_{kn}} \geq 1\right\}}}
}
}
\examples{
dlist <- dominFun(xobs = as.matrix(apple[, c('K', 'L', 'M')]),
yobs = as.matrix(apple[, c('Y1Z', 'Y2Z')]), rts = 'vrs')
}
\references{
Briec, W., Kerstens, K., & Eeckaut, P. V. (2004). Non-convex
technologies and cost functions: Definitions, duality and nonparametric
tests of convexity. \emph{Journal of Economics-Zeitschrift Fur Nationalokonomie},
\bold{81}(2), 155-192. doi: \url{10.1007/s00712-003-0620-y}

Briec, W., & Kerstens, K. (2006). Input, output and graph technical
efficiency measures on non-convex FDH models with various scaling laws:
An integrated approach based upon implicit enumeration algorithms. \emph{Top},
\bold{14}(1), 135-166. doi: \url{10.1007/BF02579006}
}
